name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  BUILD_DEPS: cmake libconfig++-dev libxxhash-dev libjemalloc-dev libtsl-hopscotch-map-dev pkg-config python3-jinja2
  TEST_DEPS: bc bats clang node-d3 graphviz moreutils fakeroot
jobs:
  build-deb:
    strategy:
      matrix:
        os: [ubuntu-22.04]
    needs: style-checks
    runs-on: ${{ matrix.os }}
    timeout-minutes: 15
    steps:
    - uses: actions/checkout@v3
    - uses: actions/cache@v3
      with:
        path: ~/.cache/debs
        key: build-deb-debs-${{ matrix.os }}-${{ needs.style-checks.outputs.week }}
    - name: restore-cached-debs
      run: |
        [ -d ~/.cache/debs ] && sudo cp ~/.cache/debs/* /var/cache/apt/archives/ || mkdir -p ~/.cache/debs
    - uses: firebuild/firebuild-action@v3
      with:
        key: build-deb-${{ matrix.os }}
    - name: install-deps
      run: |
        ! [ ${{ matrix.os }} == "ubuntu-20.04" ] || sudo add-apt-repository -y -n ppa:firebuild/build-deps
        sudo apt update
        sudo eatmydata apt-get build-dep .
    - name: deb
      run: |
        # skip dh_buildinfo step
        printf '\noverride_dh_buildinfo:\n' >> debian/rules
        # don't intercept bats and ldd to avoid breaking firebuild's own tests
        cat $FIREBUILD_CACHE_DIR/.cache/firebuild/size || true
        firebuild -s
        firebuild  -o 'processes.dont_intercept += "bats"' -o 'processes.dont_intercept += "ldd"' dpkg-buildpackage -j2 -us -uc
        echo debconf firebuild/license-accepted select true | sudo debconf-set-selections
        sudo apt-get install -y --allow-downgrades ../*.deb
        cat $FIREBUILD_CACHE_DIR/.cache/firebuild/size || true
        firebuild -s
        firebuild -- ls
    - name: save-cached-debs
      run: |
        rm -f ~/.cache/debs/*
        cp /var/cache/apt/archives/*deb ~/.cache/debs/

  style-checks:
    runs-on: ubuntu-22.04
    outputs:
      week: ${{ steps.week-of-year.outputs.week }} # map step output to job output
    timeout-minutes: 2
    steps:
    - uses: actions/checkout@v3
    - name: install-deps
      run: |
        # TODO(rbalint) use packaged cpplint when it becomes available https://bugs.debian.org/960847
        pip3 install cpplint==1.5.4
    - name: style-check
      run: env PATH=$HOME/.local/bin:$PATH cpplint --recursive src test
      # this will be used by other jobs to invalidate cache after a week
    - name: week of year
      id: week-of-year
      run: echo "week=$(/bin/date -u "+%V")" >> $GITHUB_OUTPUT
